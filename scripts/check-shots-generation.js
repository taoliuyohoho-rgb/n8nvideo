#!/usr/bin/env node

/**
 * 诊断脚本：检查 shots 是否使用了兜底逻辑
 * 
 * 如何使用：
 * 1. 打开浏览器开发者工具（F12）
 * 2. 在"Console"标签中查看日志
 * 3. 生成一个新脚本
 * 4. 查找以下关键信息：
 */

console.log(`
========================================
🔍 如何检查 shots 是否来自兜底逻辑
========================================

📝 步骤 1: 打开浏览器控制台
  - 按 F12 或右键 -> 检查
  - 切换到 "Console" 标签

📝 步骤 2: 生成新脚本
  - 在视频生成页面生成一个新脚本
  - 观察控制台输出

🔍 步骤 3: 查找以下关键信息

【情况 A：正常生成】
如果看到以下日志，说明 AI 正常返回了 shots：
  ✅ AI raw response { hasShots: true, shotsCount: 3, ... }
  ✅ hadWarnings: false
  
【情况 B：触发兜底】
如果看到以下警告，说明使用了兜底逻辑：
  ⚠️⚠️⚠️ 脚本生成警告 ⚠️⚠️⚠️
  ⚠️ AI返回的shots为空，使用兜底逻辑生成shots（这不应该成为常态）
  或
  ⚠️ AI返回的shots数量不足：X个（期望至少3个）

========================================
🎯 诊断建议
========================================

如果多次生成的脚本完全一样：

1️⃣ 检查是否触发了兜底逻辑
   → 查看控制台是否有 ⚠️ 警告信息

2️⃣ 检查 AI 是否真的返回了不同内容
   → 查看 "AI raw response" 日志
   → 对比 shotsPreview 是否每次都不同

3️⃣ 检查数据库中的脚本
   → 运行: node scripts/check-script-generation.js
   → 查看两次生成的脚本是否真的不同

========================================
📊 兜底逻辑说明
========================================

兜底逻辑位于: /app/api/script/generate/route.ts

当 AI 返回的 shots 为空或格式错误时，会使用以下模板：

shots = [
  { 
    second: 0, 
    camera: '特写', 
    action: '展示{产品}核心卖点', 
    visibility: '主体清晰可见', 
    audio: '旁白+轻快BGM' 
  },
  { 
    second: 5, 
    camera: '半身', 
    action: '功能演示/对比', 
    visibility: '关键信息可读', 
    audio: '旁白+环境声' 
  },
  { 
    second: 10, 
    camera: '特写', 
    action: '数据/口碑证明', 
    visibility: '数据/证明清晰', 
    audio: '旁白' 
  }
]

⚠️ 注意：
- 如果你每次看到的 shots 都长得像这个模板，说明一直在用兜底
- 兜底逻辑会尝试从其他字段提取信息，但可能还是很通用

========================================
🛠️ 解决方案
========================================

如果确认是兜底问题：

1. 检查 AI 模型配置
   - 确保使用的模型支持 JSON 输出
   - 检查 verified-models.json 中的配置

2. 检查 Prompt 模板
   - 确保 Prompt 明确要求输出 shots 数组
   - 检查是否有足够的上下文信息

3. 查看服务器日志
   - 检查是否有 AI 调用失败的错误
   - 查看完整的 AI 返回数据

4. 联系开发者
   - 提供具体的生成示例
   - 提供控制台日志截图

========================================
`)

